-------[ 2021-01-01 00:00:00 ]

sbs.hcal.nchan = 288
sbs.hcal.nlog_chan = 576

## Detector map, format:
## crate slot start_channel end_channel ref_channel [ model ]
## ref_channel is ignored for ADCs, but must still be specified
## one may specify model number, but make sure it's the same as the cratemap
sbs.hcal.detmap =
## FADCs (x16)
  16     3     0     15   0 #      0
  16     4     0     15   0 #     16
  16     5     0     15   0 #     32
  16     6     0     15   0 #     48
  16     7     0     15   0 #     64
  16     8     0     15   0 #     80
  16     9     0     15   0 #     96
  16    10     0     15   0 #     112
  16    13     0     15   0 #     128
  16    14     0     15   0 #     144
  16    15     0     15   0 #     160
  16    16     0     15   0 #     176
  16    17     0     15   0 #     192
  16    18     0     15   0 #     208
  16    19     0     15   0 #     224
  16    20     0     15   0 #     240
  17     3     0     15   0 #     256
  17     4     0     15   0 #     272
## TDCs (x5)
  17     5     0     63   0 #      0-63
  17     6     0     63   0 #     64-127
  17     7     0     63   0 #     128-191
  17     8     0     63   0 #     192-255
  17     9     0     31   0 #     256-287

## (Should this be just tossed into a bank instead?)
sbs.hcal.ledmap = 2 30

## Channel map from channel to logical channel
sbs.hcal.start_chanmap=1
sbs.hcal.chanmap = 
#fADC Logical Mapping
##   Ch1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16 #
##----------------------------------------------------------------
#1
#       1   7   2   8   3   9   4   10  5   11  6   12 
#       13  19  14  20  15  21  16  22  17  23  18  24
	73  79  74  80  75  81  76  82  77  83  78  84  109 115 110 116   #fADC 1
	85  91  86  92  87  93  88  94  89  95  90  96  111 117 112 118   #fADC 2
	97  103 98  104 99  105 100 106 101 107 102 108 113 119 114 120   #fADC 3
	121 127 122 128 123 129 124 130 125 131 126 132 13  19  14  20    #fADC 4
	133 139 134 140 135 141 136 142 137 143 138 144 15  21  16  22    #fADC 5 
	1   7   2   8   3   9   4   10  5   11  6   12  17  23  18  24    #fADC 6
	25  31  26  32  27  33  28  34  29  35  30  36  61  67  62  68    #fADC 7
	37  43  38  44  39  45  40  46  41  47  42  48  63  69  64  70    #fADC 8
	49  55  50  56  51  57  52  58  53  59  54  60  65  71  66  72    #fADC 9
	145 151 146 152 147 153 148 154 149 155 150 156 181 187 182 188   #fADC 10
 	157 163 158 164 159 165 160 166 161 167 162 168 183 189 184 190   #fADC 11
	169 175 170 176 171 177 172 178 173 179 174 180 185 191 186 192   #fADC 12
	193 199 194 200 195 201 196 202 197 203 198 204 229 235 230 236   #fADC 13
	205 211 206 212 207 213 208 214 209 215 210 216 231 237 232 238   #fADC 14
	217 223 218 224 219 225 220 226 221 227 222 228 233 239 234 240   #fADC 15
	241 247 242 248 243 249 244 250 245 251 246 252 277 283 278 284   #fADC 16
	253 259 254 260 255 261 256 262 257 263 258 264 279 285 280 286   #fADC 17
	265 271 266 272 267 273 268 274 269 275 270 276 281 287 282 288   #fADC 18
#F1TDC Logical Mapping
##   Ch33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 #
##----------------------------------------------------------------
#1
#       13  19  14  20  15  21  16  22  17  23  18  24  1   7   2   8   3   9   4   10  5   11  6   12
       85  91  86  92  87  93  88  94  89  95  90  96  111 117 112 118 73  79  74  80  75  81  76  82  77  83  78  84  109 115 110 116  #TDC 1. Ribbons 1, 2.
       169 175 170 176 171 177 172 178 173 179 174 180 185 191 186 192 157 163 158 164 159 165 160 166 161 167 162 168 183 189 184 190  #TDC 1. Ribbons 11, 12.
       121 127 122 128 123 129 124 130 125 131 126 132 13  19  14  20  97  103 98  104 99  105 100 106 101 107 102 108 113 119 114 120  #TDC 2. Ribbons 3, 4.
       205 211 206 212 207 213 208 214 209 215 210 216 231 237 232 238 193 199 194 200 195 201 196 202 197 203 198 204 229 235 230 236  #TDC 2. Ribbons 13, 14.
       1   7   2   8   3   9   4   10  5   11  6   12  17  23  18  24  133 139 134 140 135 141 136 142 137 143 138 144 15  21  16  22   #TDC 3. Ribbons 5, 6.
       241 247 242 248 243 249 244 250 245 251 246 252 277 283 278 284 217 223 218 224 219 225 220 226 221 227 222 228 233 239 234 240  #TDC 3. Ribbons 15, 16.
       37  43  38  44  39  45  40  46  41  47  42  48  63  69  64  70  25  31  26  32  27  33  28  34  29  35  30  36  61  67  62  68   #TDC 3. Ribbons 7, 8.
       265 271 266 272 267 273 268 274 269 275 270 276 281 287 282 288 253 259 254 260 255 261 256 262 257 263 258 264 279 285 280 286  #TDC 4. Ribbons 17, 18.
##   Ch1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16
       145 151 146 152 147 153 148 154 149 155 150 156 181 187 182 188 49  55  50  56  51  57  52  58  53  59  54  60  65  71  66  72   #TDC 5. Ribbons 9, 10.       

sbs.hcal.ledmap = 2 30

## Positions in [m] where +z is roated by sbs.theta
sbs.hcal.position = 0 0 0

## HCal is composed of 4 sub-assemblies each of 6x12 (row,col) modules

## Test settings for one sub-assembly
sbs.hcal.size  =  1.8567  0.9461  1.0000

## HCal is a matrix of with nrows and ncols
## Numbers below are just a test so that it maches the number of used fADC's
#sbs.hcal.ncols = 12
#sbs.hcal.nrows = 16
sbs.hcal.nrows = 24
sbs.hcal.ncols = 12

## Assuming HCAL voffset is 0.75m
## Position of first module
#sbs.hcal.xyz = 0.92835 0.47305 0.0
sbs.hcal.xyz = 0.85217 -2.575625 0.0
## Vertical space between the centers of two modules = 0.15875
## Horizontal space between the centers of two modules = 0.15494
sbs.hcal.dxdydz = 0.15494 0.15875 0.0
## y-pos of all modules
sbs.hcal.ypos =
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170 
-0.852170 -0.697230 -0.542290 -0.387350 -0.232410 -0.077470 0.077470 0.232410 0.387350 0.542290 0.697230 0.852170

## x-pos of all modules
sbs.hcal.xpos =
-2.575625 -2.575625 -2.575625 -2.575625 -2.575625 -2.575625 -2.575625 -2.575625 -2.575625 -2.575625 -2.575625 -2.575625 
-2.416875 -2.416875 -2.416875 -2.416875 -2.416875 -2.416875 -2.416875 -2.416875 -2.416875 -2.416875 -2.416875 -2.416875 
-2.258125 -2.258125 -2.258125 -2.258125 -2.258125 -2.258125 -2.258125 -2.258125 -2.258125 -2.258125 -2.258125 -2.258125 
-2.099375 -2.099375 -2.099375 -2.099375 -2.099375 -2.099375 -2.099375 -2.099375 -2.099375 -2.099375 -2.099375 -2.099375 
-1.940625 -1.940625 -1.940625 -1.940625 -1.940625 -1.940625 -1.940625 -1.940625 -1.940625 -1.940625 -1.940625 -1.940625 
-1.781875 -1.781875 -1.781875 -1.781875 -1.781875 -1.781875 -1.781875 -1.781875 -1.781875 -1.781875 -1.781875 -1.781875 
-1.623125 -1.623125 -1.623125 -1.623125 -1.623125 -1.623125 -1.623125 -1.623125 -1.623125 -1.623125 -1.623125 -1.623125 
-1.464375 -1.464375 -1.464375 -1.464375 -1.464375 -1.464375 -1.464375 -1.464375 -1.464375 -1.464375 -1.464375 -1.464375 
-1.305625 -1.305625 -1.305625 -1.305625 -1.305625 -1.305625 -1.305625 -1.305625 -1.305625 -1.305625 -1.305625 -1.305625 
-1.146875 -1.146875 -1.146875 -1.146875 -1.146875 -1.146875 -1.146875 -1.146875 -1.146875 -1.146875 -1.146875 -1.146875 
-0.988125 -0.988125 -0.988125 -0.988125 -0.988125 -0.988125 -0.988125 -0.988125 -0.988125 -0.988125 -0.988125 -0.988125 
-0.829375 -0.829375 -0.829375 -0.829375 -0.829375 -0.829375 -0.829375 -0.829375 -0.829375 -0.829375 -0.829375 -0.829375 
-0.670625 -0.670625 -0.670625 -0.670625 -0.670625 -0.670625 -0.670625 -0.670625 -0.670625 -0.670625 -0.670625 -0.670625 
-0.511875 -0.511875 -0.511875 -0.511875 -0.511875 -0.511875 -0.511875 -0.511875 -0.511875 -0.511875 -0.511875 -0.511875 
-0.353125 -0.353125 -0.353125 -0.353125 -0.353125 -0.353125 -0.353125 -0.353125 -0.353125 -0.353125 -0.353125 -0.353125 
-0.194375 -0.194375 -0.194375 -0.194375 -0.194375 -0.194375 -0.194375 -0.194375 -0.194375 -0.194375 -0.194375 -0.194375 
-0.035625 -0.035625 -0.035625 -0.035625 -0.035625 -0.035625 -0.035625 -0.035625 -0.035625 -0.035625 -0.035625 -0.035625 
0.123125 0.123125 0.123125 0.123125 0.123125 0.123125 0.123125 0.123125 0.123125 0.123125 0.123125 0.123125 
0.281875 0.281875 0.281875 0.281875 0.281875 0.281875 0.281875 0.281875 0.281875 0.281875 0.281875 0.281875 
0.440625 0.440625 0.440625 0.440625 0.440625 0.440625 0.440625 0.440625 0.440625 0.440625 0.440625 0.440625 
0.599375 0.599375 0.599375 0.599375 0.599375 0.599375 0.599375 0.599375 0.599375 0.599375 0.599375 0.599375 
0.758125 0.758125 0.758125 0.758125 0.758125 0.758125 0.758125 0.758125 0.758125 0.758125 0.758125 0.758125 
0.916875 0.916875 0.916875 0.916875 0.916875 0.916875 0.916875 0.916875 0.916875 0.916875 0.916875 0.916875 
1.075625 1.075625 1.075625 1.075625 1.075625 1.075625 1.075625 1.075625 1.075625 1.075625 1.075625 1.075625

## FADC stuff
sbs.hcal.adc.conv = 0.4882
# Number of bins (bin=4ns) at the beginning of waveform used to determing average Pedestal
sbs.hcal.adc.NPedBin = 4
# Threshold for pulse finding in waveform (mV)
sbs.hcal.adc.thres = 20.0
# Number of bins (bin=4ns) before Threshold Bin to use in integrating pulse
sbs.hcal.adc.NSB = 3
# Number of bins (bin=4ns) before Threshold Bin to use in integrating pulse
sbs.hcal.adc.NSA = 10
# Number of bin for fixed Threshold if no Threshold Crossing is found
sbs.hcal.adc.FixThresBin = 14
#Convert adc integral in pC to GeV
sbs.hcal.adc.gain = 0.001
#
sbs.hcal.tdc.offset = 0.0
#
sbs.hcal.tdc.cal = 0.1
#
sbs.hcal.tdc.GoodTimeCut = 80.0
#

## ** Parameters related to HCAL clustering **
## Maximum distance difference between cluster seed and additional clusters, set to 0.3 m
sbs.hcal.Rmax_dis = 0.3
## Mininum energy  for a cluster center (not really used right now)
sbs.hcal.emin  = 0.005
sbs.hcal.emin_clSeed = 0.005
## Maximum time difference between cluster seed & additional clusters [Default = 1000ns]
sbs.hcal.tmax = 1000.0

-------[ 2023-12-31 00:00:00 ] # Start GEN-RP

# if we want SBS tracking to work properly we need to set the "position" of hcal according to magnet distance from target.
# in GEN-RP, the position is hcal distance minus 4.105 m (in the "optics" coordinate system)

sbs.hcal.position = 0.0 0.0 4.895

